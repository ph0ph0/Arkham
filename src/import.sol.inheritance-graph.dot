digraph "" {
Ownable -> Context;
Ownable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Ownable</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    owner()</TD></TR><TR><TD align="left">    renounceOwnership()</TD></TR><TR><TD align="left">    transferOwnership(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _checkOwner()</TD></TR><TR><TD align="left">    _transferOwnership(address)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    onlyOwner()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _owner</TD></TR></TABLE> >];

IERC1967[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IERC1967</B></TD></TR></TABLE> >];

IERC1822Proxiable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IERC1822Proxiable</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    proxiableUUID()</TD></TR></TABLE> >];

ERC1967Proxy -> Proxy [ label="1" ];
ERC1967Proxy -> ERC1967Upgrade [ label="2" ];
ERC1967Proxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ERC1967Proxy</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    _implementation()</font></TD></TR></TABLE> >];

ERC1967Upgrade -> IERC1967;
ERC1967Upgrade[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ERC1967Upgrade</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _getImplementation()</TD></TR><TR><TD align="left">    _setImplementation(address)</TD></TR><TR><TD align="left">    _upgradeTo(address)</TD></TR><TR><TD align="left">    _upgradeToAndCall(address,bytes,bool)</TD></TR><TR><TD align="left">    _upgradeToAndCallUUPS(address,bytes,bool)</TD></TR><TR><TD align="left">    _getAdmin()</TD></TR><TR><TD align="left">    _setAdmin(address)</TD></TR><TR><TD align="left">    _changeAdmin(address)</TD></TR><TR><TD align="left">    _getBeacon()</TD></TR><TR><TD align="left">    _setBeacon(address)</TD></TR><TR><TD align="left">    _upgradeBeaconToAndCall(address,bytes,bool)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _ROLLBACK_SLOT</TD></TR><TR><TD align="left">    _IMPLEMENTATION_SLOT</TD></TR><TR><TD align="left">    _ADMIN_SLOT</TD></TR><TR><TD align="left">    _BEACON_SLOT</TD></TR></TABLE> >];

Proxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Proxy</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    fallback()</TD></TR><TR><TD align="left">    receive()</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _delegate(address)</TD></TR><TR><TD align="left">    _implementation()</TD></TR><TR><TD align="left">    _fallback()</TD></TR><TR><TD align="left">    _beforeFallback()</TD></TR></TABLE> >];

BeaconProxy -> Proxy [ label="1" ];
BeaconProxy -> ERC1967Upgrade [ label="2" ];
BeaconProxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>BeaconProxy</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _beacon()</TD></TR><TR><TD align="left"><font color="#FFA500">    _implementation()</font></TD></TR><TR><TD align="left">    _setBeacon(address,bytes)</TD></TR></TABLE> >];

IBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    implementation()</TD></TR></TABLE> >];

UpgradeableBeacon -> IBeacon [ label="1" ];
UpgradeableBeacon -> Ownable [ label="2" ];
UpgradeableBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>UpgradeableBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    implementation()</font></TD></TR><TR><TD align="left">    upgradeTo(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _setImplementation(address)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _implementation</TD></TR></TABLE> >];

ProxyAdmin -> Ownable;
ProxyAdmin[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ProxyAdmin</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    getProxyImplementation(ITransparentUpgradeableProxy)</TD></TR><TR><TD align="left">    getProxyAdmin(ITransparentUpgradeableProxy)</TD></TR><TR><TD align="left">    changeProxyAdmin(ITransparentUpgradeableProxy,address)</TD></TR><TR><TD align="left">    upgrade(ITransparentUpgradeableProxy,address)</TD></TR><TR><TD align="left">    upgradeAndCall(ITransparentUpgradeableProxy,address,bytes)</TD></TR></TABLE> >];

ITransparentUpgradeableProxy -> IERC1967;
ITransparentUpgradeableProxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ITransparentUpgradeableProxy</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    admin()</TD></TR><TR><TD align="left">    implementation()</TD></TR><TR><TD align="left">    changeAdmin(address)</TD></TR><TR><TD align="left">    upgradeTo(address)</TD></TR><TR><TD align="left">    upgradeToAndCall(address,bytes)</TD></TR></TABLE> >];

TransparentUpgradeableProxy -> ERC1967Proxy;
TransparentUpgradeableProxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>TransparentUpgradeableProxy</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    _fallback()</font></TD></TR><TR><TD align="left">    _dispatchAdmin()</TD></TR><TR><TD align="left">    _dispatchImplementation()</TD></TR><TR><TD align="left">    _dispatchChangeAdmin()</TD></TR><TR><TD align="left">    _dispatchUpgradeTo()</TD></TR><TR><TD align="left">    _dispatchUpgradeToAndCall()</TD></TR><TR><TD align="left">    _admin()</TD></TR><TR><TD align="left">    _requireZeroValue()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    ifAdmin()</TD></TR></TABLE> >];

Address[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Address</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    isContract(address)</TD></TR><TR><TD align="left">    sendValue(address,uint256)</TD></TR><TR><TD align="left">    functionCall(address,bytes)</TD></TR><TR><TD align="left">    functionCall(address,bytes,string)</TD></TR><TR><TD align="left">    functionCallWithValue(address,bytes,uint256)</TD></TR><TR><TD align="left">    functionCallWithValue(address,bytes,uint256,string)</TD></TR><TR><TD align="left">    functionStaticCall(address,bytes)</TD></TR><TR><TD align="left">    functionStaticCall(address,bytes,string)</TD></TR><TR><TD align="left">    functionDelegateCall(address,bytes)</TD></TR><TR><TD align="left">    functionDelegateCall(address,bytes,string)</TD></TR><TR><TD align="left">    verifyCallResultFromTarget(address,bool,bytes,string)</TD></TR><TR><TD align="left">    verifyCallResult(bool,bytes,string)</TD></TR><TR><TD align="left">    _revert(bytes,string)</TD></TR></TABLE> >];

Context[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Context</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _msgSender()</TD></TR><TR><TD align="left">    _msgData()</TD></TR></TABLE> >];

StorageSlot[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>StorageSlot</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    getAddressSlot(bytes32)</TD></TR><TR><TD align="left">    getBooleanSlot(bytes32)</TD></TR><TR><TD align="left">    getBytes32Slot(bytes32)</TD></TR><TR><TD align="left">    getUint256Slot(bytes32)</TD></TR><TR><TD align="left">    getStringSlot(bytes32)</TD></TR><TR><TD align="left">    getStringSlot(string)</TD></TR><TR><TD align="left">    getBytesSlot(bytes32)</TD></TR><TR><TD align="left">    getBytesSlot(bytes)</TD></TR></TABLE> >];

AdminUpgradeabilityProxy -> TransparentUpgradeableProxy;
AdminUpgradeabilityProxy[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>AdminUpgradeabilityProxy</B></TD></TR></TABLE> >];

}